name: Build Monaspace Profiles

on:
  workflow_call:
    inputs:
      version:
        description: "Monaspace release tag (e.g. v1.200.0)"
        required: true
        type: string

permissions:
  contents: read
  actions: write

jobs:
  download-and-unzip:
    name: Download and unzip monaspace ${{ inputs.version }}
    runs-on: macos-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Resolve release asset URL
        id: resolve
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          result-encoding: json
          script: |
            const version = `${{ inputs.version }}`;
            try {
              const { data: rel } = await github.rest.repos.getReleaseByTag({
                owner: 'githubnext',
                repo: 'monaspace',
                tag: version,
              });
              const assets = rel.assets || [];
              // Prefer a .zip asset (common for font bundles)
              const zip = assets.find(a => a.name && a.name.toLowerCase().endsWith('.zip')) || null;
              if (!zip) {
                core.setFailed(`No .zip assets found for monaspace release ${version}`);
                return;
              }
              core.info(`Selected asset: ${zip.name}`);
              return { url: zip.browser_download_url, name: zip.name };
            } catch (err) {
              core.setFailed(`Failed to resolve monaspace release ${version}: ${err.message}`);
            }
      - name: Download asset
        run: |
          set -euo pipefail
          url="${{ fromJson(steps.resolve.outputs.result).url }}"
          name="${{ fromJson(steps.resolve.outputs.result).name }}"
          echo "Downloading $name from $url"
          curl -L --fail -o "$name" "$url"
      - name: Unzip asset
        run: |
          set -euo pipefail
          name="${{ fromJson(steps.resolve.outputs.result).name }}"
          mkdir -p monaspace/{variable,otf,frozen}
          mkdir -p monaspace/{otf,frozen}/{argon,krypton,neon,radon,xenon}
          unzip -j "$name" "*/fonts/variable/*" -d monaspace/variable
          unzip -j "$name" "*/fonts/otf/MonaspaceArgon*" -d monaspace/otf/argon
          unzip -j "$name" "*/fonts/otf/MonaspaceKrypton*" -d monaspace/otf/krypton
          unzip -j "$name" "*/fonts/otf/MonaspaceNeon*" -d monaspace/otf/neon
          unzip -j "$name" "*/fonts/otf/MonaspaceRadon*" -d monaspace/otf/radon
          unzip -j "$name" "*/fonts/otf/MonaspaceXenon*" -d monaspace/otf/xenon
          unzip -j "$name" "*/fonts/frozen/MonaspaceArgon*" -d monaspace/frozen/argon
          unzip -j "$name" "*/fonts/frozen/MonaspaceKrypton*" -d monaspace/frozen/krypton
          unzip -j "$name" "*/fonts/frozen/MonaspaceNeon*" -d monaspace/frozen/neon
          unzip -j "$name" "*/fonts/frozen/MonaspaceRadon*" -d monaspace/frozen/radon
          unzip -j "$name" "*/fonts/frozen/MonaspaceXenon*" -d monaspace/frozen/xenon
          rm -f "$name"
      - name: Build .mobileconfig profile with fonts
        env:
          MONASPACE_VERSION: ${{ inputs.version }}
        run: |
          set -euo pipefail
          node scripts/build-profile.js \
            --version="${MONASPACE_VERSION}" \
            --dir="monaspace/variable" \
            --fontname="Monaspace Variable Fonts"
          node scripts/build-profile.js \
            --version="${MONASPACE_VERSION}" \
            --dir="monaspace/otf" \
            --fontname="Monaspace OTF Fonts"
          node scripts/build-profile.js \
            --version="${MONASPACE_VERSION}" \
            --dir="monaspace/frozen" \
            --fontname="Monaspace Frozen Fonts"
          node scripts/build-profile.js \
            --version="${MONASPACE_VERSION}" \
            --dir="monaspace/otf/argon" \
            --fontname="Monaspace OTF Argon Fonts"
          node scripts/build-profile.js \
            --version="${MONASPACE_VERSION}" \
            --dir="monaspace/otf/krypton" \
            --fontname="Monaspace OTF Krypton Fonts"
          node scripts/build-profile.js \
            --version="${MONASPACE_VERSION}" \
            --dir="monaspace/otf/neon" \
            --fontname="Monaspace OTF Neon Fonts"
          node scripts/build-profile.js \
            --version="${MONASPACE_VERSION}" \
            --dir="monaspace/otf/radon" \
            --fontname="Monaspace OTF Radon Fonts"
          node scripts/build-profile.js \
            --version="${MONASPACE_VERSION}" \
            --dir="monaspace/otf/xenon" \
            --fontname="Monaspace OTF Xenon Fonts"
          node scripts/build-profile.js \
            --version="${MONASPACE_VERSION}" \
            --dir="monaspace/frozen/argon" \
            --fontname="Monaspace Frozen Argon Fonts"
          node scripts/build-profile.js \
            --version="${MONASPACE_VERSION}" \
            --dir="monaspace/frozen/krypton" \
            --fontname="Monaspace Frozen Krypton Fonts"
          node scripts/build-profile.js \
            --version="${MONASPACE_VERSION}" \
            --dir="monaspace/frozen/neon" \
            --fontname="Monaspace Frozen Neon Fonts"
          node scripts/build-profile.js \
            --version="${MONASPACE_VERSION}" \
            --dir="monaspace/frozen/radon" \
            --fontname="Monaspace Frozen Radon Fonts"
          node scripts/build-profile.js \
            --version="${MONASPACE_VERSION}" \
            --dir="monaspace/frozen/xenon" \
            --fontname="Monaspace Frozen Xenon Fonts"
      - name: Upload each mobileconfig individually
        run: |
          for file in *.mobileconfig; do
            echo "Uploading $file"
            gh run upload-artifact "$file" \
              --name "$file" \
              --retention-days 7 \
              --compression-level 9
          done
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
