name: Build Monaspace Profiles

on:
  workflow_call:
    inputs:
      version:
        description: "Monaspace release tag (e.g. v1.200.0)"
        required: true
        type: string

permissions:
  contents: read
  actions: write

jobs:
  download-and-unzip:
    name: Download and unzip monaspace ${{ inputs.version }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Resolve release asset URL
        id: resolve
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          result-encoding: json
          script: |
            const version = `${{ inputs.version }}`;
            try {
              const { data: rel } = await github.rest.repos.getReleaseByTag({
                owner: 'githubnext',
                repo: 'monaspace',
                tag: version,
              });
              const assets = rel.assets || [];
              // Prefer a .zip asset (common for font bundles)
              const zip = assets.find(a => a.name && a.name.toLowerCase().endsWith('.zip')) || null;
              if (!zip) {
                core.setFailed(`No .zip assets found for monaspace release ${version}`);
                return;
              }
              core.info(`Selected asset: ${zip.name}`);
              return { url: zip.browser_download_url, name: zip.name };
            } catch (err) {
              core.setFailed(`Failed to resolve monaspace release ${version}: ${err.message}`);
            }
      - name: Download asset
        run: |
          set -euo pipefail
          url="${{ fromJson(steps.resolve.outputs.result).url }}"
          name="${{ fromJson(steps.resolve.outputs.result).name }}"
          echo "Downloading $name from $url"
          curl -L --fail -o "$name" "$url"
      - name: Unzip asset
        run: |
          set -euo pipefail
          name="${{ fromJson(steps.resolve.outputs.result).name }}"
          mkdir -p monaspace/{variable,otf,frozen}
          mkdir -p monaspace/{otf,frozen}/{argon,krypton,neon,radon,xenon}
          unzip -j "$name" "*/fonts/variable/*" -x "*/.*" -d monaspace/variable
          unzip -j "$name" "*/fonts/otf/MonaspaceArgon*" -x "*/.*" -d monaspace/otf/argon
          unzip -j "$name" "*/fonts/otf/MonaspaceKrypton*" -x "*/.*" -d monaspace/otf/krypton
          unzip -j "$name" "*/fonts/otf/MonaspaceNeon*" -x "*/.*" -d monaspace/otf/neon
          unzip -j "$name" "*/fonts/otf/MonaspaceRadon*" -x "*/.*" -d monaspace/otf/radon
          unzip -j "$name" "*/fonts/otf/MonaspaceXenon*" -x "*/.*" -d monaspace/otf/xenon
          unzip -j "$name" "*/fonts/frozen/MonaspaceArgon*" -x "*/.*" -d monaspace/frozen/argon
          unzip -j "$name" "*/fonts/frozen/MonaspaceKrypton*" -x "*/.*" -d monaspace/frozen/krypton
          unzip -j "$name" "*/fonts/frozen/MonaspaceNeon*" -x "*/.*" -d monaspace/frozen/neon
          unzip -j "$name" "*/fonts/frozen/MonaspaceRadon*" -x "*/.*" -d monaspace/frozen/radon
          unzip -j "$name" "*/fonts/frozen/MonaspaceXenon*" -x "*/.*" -d monaspace/frozen/xenon
          rm -f "$name"
      - name: Build Variable
        run: |
          node scripts/build-profile.js \
            --version="${{ inputs.version }}" \
            --dir="monaspace/variable" \
            --fontname="Monaspace Variable"
      - name: Build Frozen
        run: |
          node scripts/build-profile.js \
            --version="${{ inputs.version }}" \
            --dir="monaspace/frozen" \
            --fontname="Monaspace Frozen"
      - name: Build OTF Argon
        run: |
          node scripts/build-profile.js \
            --version="${{ inputs.version }}" \
            --dir="monaspace/otf/argon" \
            --fontname="Monaspace OTF Argon"
      - name: Build OTF Krypton
        run: |
          node scripts/build-profile.js \
            --version="${{ inputs.version }}" \
            --dir="monaspace/otf/krypton" \
            --fontname="Monaspace OTF Krypton"
      - name: Build OTF Neon
        run: |
          node scripts/build-profile.js \
            --version="${{ inputs.version }}" \
            --dir="monaspace/otf/neon" \
            --fontname="Monaspace OTF Neon"
      - name: Build OTF Radon
        run: |
          node scripts/build-profile.js \
            --version="${{ inputs.version }}" \
            --dir="monaspace/otf/radon" \
            --fontname="Monaspace OTF Radon"
      - name: Build OTF Xenon
        run: |
          node scripts/build-profile.js \
            --version="${{ inputs.version }}" \
            --dir="monaspace/otf/xenon" \
            --fontname="Monaspace OTF Xenon"
      - name: Build Frozen Argon
        run: |
          node scripts/build-profile.js \
            --version="${{ inputs.version }}" \
            --dir="monaspace/frozen/argon" \
            --fontname="Monaspace Frozen Argon"
      - name: Build Frozen Krypton
        run: |
          node scripts/build-profile.js \
            --version="${{ inputs.version }}" \
            --dir="monaspace/frozen/krypton" \
            --fontname="Monaspace Frozen Krypton"
      - name: Build Frozen Neon
        run: |
          node scripts/build-profile.js \
            --version="${{ inputs.version }}" \
            --dir="monaspace/frozen/neon" \
            --fontname="Monaspace Frozen Neon"
      - name: Build Frozen Radon
        run: |
          node scripts/build-profile.js \
            --version="${{ inputs.version }}" \
            --dir="monaspace/frozen/radon" \
            --fontname="Monaspace Frozen Radon"
      - name: Build Frozen Xenon
        run: |
          node scripts/build-profile.js \
            --version="${{ inputs.version }}" \
            --dir="monaspace/frozen/xenon" \
            --fontname="Monaspace Frozen Xenon"
      - name: Upload bundle
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: Monaspace Configs
          path: "*.mobileconfig"
          retention-days: 1
          compression-level: 0
          if-no-files-found: error
